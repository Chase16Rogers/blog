(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{517:function(e,t,a){"use strict";a.r(t);var r=a(2),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-4"}},[e._v("#")]),e._v(" Day 4")]),e._v(" "),a("p",[a("strong",[e._v("01/14/21")])]),e._v(" "),a("h2",{attrs:{id:"virtually-a-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtually-a-property"}},[e._v("#")]),e._v(" Virtually a Property")]),e._v(" "),a("p",[e._v("A virtual property is simply a logical continuation of the information stored on actual properties. The example given is a person's full name. A data base might want to store a person's first and last name seperately to give the convenience of freedom of choice, maybe they use the first name in a casual greeting message, but the last name when sending a more formal message. Instead of storing a third property that combines the two strings, it would be more efficient(space wise) to simply concatenate the two when it is necessary to use a person's full name for those potentially outlier situations.")]),e._v(" "),a("h2",{attrs:{id:"virtual-properties-in-my-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-properties-in-my-code"}},[e._v("#")]),e._v(" Virtual properties in my code")]),e._v(" "),a("p",[e._v("Honestly, at this point my understanding is shallow enough that I don't think much of virtual properties, it seems like a mostly unecessary step, but I could maybe see it in instances like gregslist. Instead of drawing the make and model for a car listing seperately, I could make a virtual property of make and model. Because in the real world they are almost always mentioned together, and anytime I drew them they would be together anyways. But it wasn't very much effort whatsoever to draw them seperately.")]),e._v(" "),a("h2",{attrs:{id:"it-s-a-trap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#it-s-a-trap"}},[e._v("#")]),e._v(" It's a trap!")]),e._v(" "),a("p",[e._v("It is not possible to make a search using a virtual property! Mayhaps you could derive one of its contributing values to then make a query, but that would be a ridiculous waste of TEE. It's much better to make a search using existing properties, that you would already know if you had access to a virtual property.")]),e._v(" "),a("h2",{attrs:{id:"afternoon-challenge-partner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-challenge-partner"}},[e._v("#")]),e._v(" Afternoon Challenge (Partner)")]),e._v(" "),a("p",[e._v("Hackathon Planning")])])}),[],!1,null,null,null);t.default=s.exports}}]);